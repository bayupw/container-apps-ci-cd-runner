FROM ubuntu:latest

# Set environment variables
ENV RUNNER_VERSION=2.322.0 \
    RUNNER_HOME=/actions-runner \
    RUNNER_USER="runner" \
    PYTHON_VERSION="3.12"

USER root

# Update the OS base packages
RUN apt-get update -y && apt-get upgrade -y

# Install essential system dependencies
RUN apt-get install -y \
    ca-certificates \
    libc6 \
    libgcc1 \
    libgssapi-krb5-2 \
    libstdc++6 \
    zlib1g

# Install dependencies required by the runner and other tools
RUN apt-get install -y \
  curl \
  jq \
  git \
  python3 \
  python3-pip \
  gnupg \
  sudo \
  software-properties-common

# Install Microsoft ODBC driver for SQL Server
RUN curl -sSL -O https://packages.microsoft.com/config/ubuntu/$(grep VERSION_ID /etc/os-release | cut -d '"' -f 2)/packages-microsoft-prod.deb && \
    dpkg -i packages-microsoft-prod.deb && \
    rm packages-microsoft-prod.deb && \
    apt-get update && \
    ACCEPT_EULA=Y apt-get install -y msodbcsql18 mssql-tools18 unixodbc-dev && \
    echo 'export PATH="$PATH:/opt/mssql-tools18/bin"' >> /etc/bash.bashrc

# Remove cached package files to keep image small
RUN apt-get clean && \
    rm -rf /var/lib/apt/lists/*  

# Create runner user
RUN adduser --disabled-password --gecos "" --uid 1001 runner && \
    groupadd docker --gid 123 && \
    usermod -aG sudo runner && \
    usermod -aG docker runner && \
    echo "%sudo ALL=(ALL:ALL) NOPASSWD:ALL" > /etc/sudoers

# Set working directory
WORKDIR /actions-runner

# Download, extract and install the GitHub Actions Runner
RUN curl -o actions-runner.tar.gz -L https://github.com/actions/runner/releases/download/v${RUNNER_VERSION}/actions-runner-linux-x64-${RUNNER_VERSION}.tar.gz \
    && tar xzf ./actions-runner.tar.gz \
    && rm actions-runner.tar.gz

# Add entrypoint script
COPY github-actions-runner/entrypoint.sh ./entrypoint.sh
RUN chmod +x ./entrypoint.sh && chown ${RUNNER_USER}:${RUNNER_USER} ./entrypoint.sh

# Switch to runner user
USER ${RUNNER_USER}

ENTRYPOINT ["./entrypoint.sh"]